// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.emineo.roo.reverse.domain;

import ch.emineo.roo.reverse.domain.Productthemesubcategory;
import ch.emineo.roo.reverse.domain.ProductthemesubcategoryDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect ProductthemesubcategoryDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ProductthemesubcategoryDataOnDemand: @Component;
    
    private Random ProductthemesubcategoryDataOnDemand.rnd = new SecureRandom();
    
    private List<Productthemesubcategory> ProductthemesubcategoryDataOnDemand.data;
    
    public Productthemesubcategory ProductthemesubcategoryDataOnDemand.getNewTransientProductthemesubcategory(int index) {
        Productthemesubcategory obj = new Productthemesubcategory();
        setOnline(obj, index);
        setPublic1(obj, index);
        return obj;
    }
    
    public void ProductthemesubcategoryDataOnDemand.setOnline(Productthemesubcategory obj, int index) {
        Boolean online = true;
        obj.setOnline(online);
    }
    
    public void ProductthemesubcategoryDataOnDemand.setPublic1(Productthemesubcategory obj, int index) {
        Boolean public1 = true;
        obj.setPublic1(public1);
    }
    
    public Productthemesubcategory ProductthemesubcategoryDataOnDemand.getSpecificProductthemesubcategory(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Productthemesubcategory obj = data.get(index);
        Integer id = obj.getProductthemesubcategoryid();
        return Productthemesubcategory.findProductthemesubcategory(id);
    }
    
    public Productthemesubcategory ProductthemesubcategoryDataOnDemand.getRandomProductthemesubcategory() {
        init();
        Productthemesubcategory obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getProductthemesubcategoryid();
        return Productthemesubcategory.findProductthemesubcategory(id);
    }
    
    public boolean ProductthemesubcategoryDataOnDemand.modifyProductthemesubcategory(Productthemesubcategory obj) {
        return false;
    }
    
    public void ProductthemesubcategoryDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Productthemesubcategory.findProductthemesubcategoryEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Productthemesubcategory' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Productthemesubcategory>();
        for (int i = 0; i < 10; i++) {
            Productthemesubcategory obj = getNewTransientProductthemesubcategory(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
