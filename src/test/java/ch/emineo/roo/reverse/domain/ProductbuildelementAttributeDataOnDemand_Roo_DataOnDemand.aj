// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.emineo.roo.reverse.domain;

import ch.emineo.roo.reverse.domain.Attribute;
import ch.emineo.roo.reverse.domain.AttributeDataOnDemand;
import ch.emineo.roo.reverse.domain.Productbuildelement;
import ch.emineo.roo.reverse.domain.ProductbuildelementAttribute;
import ch.emineo.roo.reverse.domain.ProductbuildelementAttributeDataOnDemand;
import ch.emineo.roo.reverse.domain.ProductbuildelementAttributePK;
import ch.emineo.roo.reverse.domain.ProductbuildelementDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect ProductbuildelementAttributeDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ProductbuildelementAttributeDataOnDemand: @Component;
    
    private Random ProductbuildelementAttributeDataOnDemand.rnd = new SecureRandom();
    
    private List<ProductbuildelementAttribute> ProductbuildelementAttributeDataOnDemand.data;
    
    @Autowired
    private AttributeDataOnDemand ProductbuildelementAttributeDataOnDemand.attributeDataOnDemand;
    
    @Autowired
    private ProductbuildelementDataOnDemand ProductbuildelementAttributeDataOnDemand.productbuildelementDataOnDemand;
    
    public ProductbuildelementAttribute ProductbuildelementAttributeDataOnDemand.getNewTransientProductbuildelementAttribute(int index) {
        ProductbuildelementAttribute obj = new ProductbuildelementAttribute();
        setEmbeddedIdClass(obj, index);
        setAttributesAttributeid(obj, index);
        setProductbuildelementProductbuildelementid(obj, index);
        return obj;
    }
    
    public void ProductbuildelementAttributeDataOnDemand.setEmbeddedIdClass(ProductbuildelementAttribute obj, int index) {
        Integer productbuildelementProductbuildelementid = new Integer(index);
        Integer idx = new Integer(index);
        
        ProductbuildelementAttributePK embeddedIdClass = new ProductbuildelementAttributePK(productbuildelementProductbuildelementid, idx);
        obj.setId(embeddedIdClass);
    }
    
    public void ProductbuildelementAttributeDataOnDemand.setAttributesAttributeid(ProductbuildelementAttribute obj, int index) {
        Attribute attributesAttributeid = attributeDataOnDemand.getRandomAttribute();
        obj.setAttributesAttributeid(attributesAttributeid);
    }
    
    public void ProductbuildelementAttributeDataOnDemand.setProductbuildelementProductbuildelementid(ProductbuildelementAttribute obj, int index) {
        Productbuildelement productbuildelementProductbuildelementid = productbuildelementDataOnDemand.getRandomProductbuildelement();
        obj.setProductbuildelementProductbuildelementid(productbuildelementProductbuildelementid);
    }
    
    public ProductbuildelementAttribute ProductbuildelementAttributeDataOnDemand.getSpecificProductbuildelementAttribute(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        ProductbuildelementAttribute obj = data.get(index);
        ProductbuildelementAttributePK id = obj.getId();
        return ProductbuildelementAttribute.findProductbuildelementAttribute(id);
    }
    
    public ProductbuildelementAttribute ProductbuildelementAttributeDataOnDemand.getRandomProductbuildelementAttribute() {
        init();
        ProductbuildelementAttribute obj = data.get(rnd.nextInt(data.size()));
        ProductbuildelementAttributePK id = obj.getId();
        return ProductbuildelementAttribute.findProductbuildelementAttribute(id);
    }
    
    public boolean ProductbuildelementAttributeDataOnDemand.modifyProductbuildelementAttribute(ProductbuildelementAttribute obj) {
        return false;
    }
    
    public void ProductbuildelementAttributeDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = ProductbuildelementAttribute.findProductbuildelementAttributeEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'ProductbuildelementAttribute' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<ProductbuildelementAttribute>();
        for (int i = 0; i < 10; i++) {
            ProductbuildelementAttribute obj = getNewTransientProductbuildelementAttribute(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
