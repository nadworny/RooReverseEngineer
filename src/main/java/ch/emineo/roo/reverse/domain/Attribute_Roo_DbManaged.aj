// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.emineo.roo.reverse.domain;

import ch.emineo.roo.reverse.domain.AdvancenoticeAttribute;
import ch.emineo.roo.reverse.domain.Attribute;
import ch.emineo.roo.reverse.domain.Content;
import ch.emineo.roo.reverse.domain.ProductAttribute;
import ch.emineo.roo.reverse.domain.ProductbuildAttribute;
import ch.emineo.roo.reverse.domain.ProductbuildelementAttribute;
import ch.emineo.roo.reverse.domain.ProductcategoryAttribute;
import ch.emineo.roo.reverse.domain.ProductsubcategoryAttribute;
import ch.emineo.roo.reverse.domain.ProductthemeAttribute;
import ch.emineo.roo.reverse.domain.ProductthemecategoryAttribute;
import ch.emineo.roo.reverse.domain.ProductthemecontentholderAttribute;
import ch.emineo.roo.reverse.domain.ProductthemesubcategoryAttribute;
import ch.emineo.roo.reverse.domain.SubscriptiontypeAttribute;
import ch.emineo.roo.reverse.domain.UserAttribute;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.OneToMany;

privileged aspect Attribute_Roo_DbManaged {
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<AdvancenoticeAttribute> Attribute.advancenoticeAttributes;
    
    @OneToMany(mappedBy = "descriptionAttributeid")
    private Set<Content> Attribute.contents;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductAttribute> Attribute.productAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductbuildAttribute> Attribute.productbuildAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductbuildelementAttribute> Attribute.productbuildelementAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductcategoryAttribute> Attribute.productcategoryAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductsubcategoryAttribute> Attribute.productsubcategoryAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductthemeAttribute> Attribute.productthemeAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductthemecategoryAttribute> Attribute.productthemecategoryAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductthemecontentholderAttribute> Attribute.productthemecontentholderAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<ProductthemesubcategoryAttribute> Attribute.productthemesubcategoryAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<SubscriptiontypeAttribute> Attribute.subscriptiontypeAttributes;
    
    @OneToMany(mappedBy = "attributesAttributeid")
    private Set<UserAttribute> Attribute.userAttributes;
    
    @Column(name = "LANGUAGE", length = 255)
    private String Attribute.language;
    
    @Column(name = "TYPE", length = 255)
    private String Attribute.type;
    
    @Column(name = "VALUE")
    private String Attribute.value;
    
    public Set<AdvancenoticeAttribute> Attribute.getAdvancenoticeAttributes() {
        return advancenoticeAttributes;
    }
    
    public void Attribute.setAdvancenoticeAttributes(Set<AdvancenoticeAttribute> advancenoticeAttributes) {
        this.advancenoticeAttributes = advancenoticeAttributes;
    }
    
    public Set<Content> Attribute.getContents() {
        return contents;
    }
    
    public void Attribute.setContents(Set<Content> contents) {
        this.contents = contents;
    }
    
    public Set<ProductAttribute> Attribute.getProductAttributes() {
        return productAttributes;
    }
    
    public void Attribute.setProductAttributes(Set<ProductAttribute> productAttributes) {
        this.productAttributes = productAttributes;
    }
    
    public Set<ProductbuildAttribute> Attribute.getProductbuildAttributes() {
        return productbuildAttributes;
    }
    
    public void Attribute.setProductbuildAttributes(Set<ProductbuildAttribute> productbuildAttributes) {
        this.productbuildAttributes = productbuildAttributes;
    }
    
    public Set<ProductbuildelementAttribute> Attribute.getProductbuildelementAttributes() {
        return productbuildelementAttributes;
    }
    
    public void Attribute.setProductbuildelementAttributes(Set<ProductbuildelementAttribute> productbuildelementAttributes) {
        this.productbuildelementAttributes = productbuildelementAttributes;
    }
    
    public Set<ProductcategoryAttribute> Attribute.getProductcategoryAttributes() {
        return productcategoryAttributes;
    }
    
    public void Attribute.setProductcategoryAttributes(Set<ProductcategoryAttribute> productcategoryAttributes) {
        this.productcategoryAttributes = productcategoryAttributes;
    }
    
    public Set<ProductsubcategoryAttribute> Attribute.getProductsubcategoryAttributes() {
        return productsubcategoryAttributes;
    }
    
    public void Attribute.setProductsubcategoryAttributes(Set<ProductsubcategoryAttribute> productsubcategoryAttributes) {
        this.productsubcategoryAttributes = productsubcategoryAttributes;
    }
    
    public Set<ProductthemeAttribute> Attribute.getProductthemeAttributes() {
        return productthemeAttributes;
    }
    
    public void Attribute.setProductthemeAttributes(Set<ProductthemeAttribute> productthemeAttributes) {
        this.productthemeAttributes = productthemeAttributes;
    }
    
    public Set<ProductthemecategoryAttribute> Attribute.getProductthemecategoryAttributes() {
        return productthemecategoryAttributes;
    }
    
    public void Attribute.setProductthemecategoryAttributes(Set<ProductthemecategoryAttribute> productthemecategoryAttributes) {
        this.productthemecategoryAttributes = productthemecategoryAttributes;
    }
    
    public Set<ProductthemecontentholderAttribute> Attribute.getProductthemecontentholderAttributes() {
        return productthemecontentholderAttributes;
    }
    
    public void Attribute.setProductthemecontentholderAttributes(Set<ProductthemecontentholderAttribute> productthemecontentholderAttributes) {
        this.productthemecontentholderAttributes = productthemecontentholderAttributes;
    }
    
    public Set<ProductthemesubcategoryAttribute> Attribute.getProductthemesubcategoryAttributes() {
        return productthemesubcategoryAttributes;
    }
    
    public void Attribute.setProductthemesubcategoryAttributes(Set<ProductthemesubcategoryAttribute> productthemesubcategoryAttributes) {
        this.productthemesubcategoryAttributes = productthemesubcategoryAttributes;
    }
    
    public Set<SubscriptiontypeAttribute> Attribute.getSubscriptiontypeAttributes() {
        return subscriptiontypeAttributes;
    }
    
    public void Attribute.setSubscriptiontypeAttributes(Set<SubscriptiontypeAttribute> subscriptiontypeAttributes) {
        this.subscriptiontypeAttributes = subscriptiontypeAttributes;
    }
    
    public Set<UserAttribute> Attribute.getUserAttributes() {
        return userAttributes;
    }
    
    public void Attribute.setUserAttributes(Set<UserAttribute> userAttributes) {
        this.userAttributes = userAttributes;
    }
    
    public String Attribute.getLanguage() {
        return language;
    }
    
    public void Attribute.setLanguage(String language) {
        this.language = language;
    }
    
    public String Attribute.getType() {
        return type;
    }
    
    public void Attribute.setType(String type) {
        this.type = type;
    }
    
    public String Attribute.getValue() {
        return value;
    }
    
    public void Attribute.setValue(String value) {
        this.value = value;
    }
    
}
